// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace c_sharp_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241216125108_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("c_sharp.Models.ChatterCraft", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("likes")
                        .HasColumnType("int");

                    b.Property<string>("text")
                        .HasColumnType("longtext");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("chatterCraft");
                });

            modelBuilder.Entity("c_sharp.Models.Community", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("communityName")
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("shortName")
                        .HasColumnType("longtext");

                    b.Property<string>("text")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("communities");
                });

            modelBuilder.Entity("c_sharp.Models.Gossip", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("text")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("gossips");
                });

            modelBuilder.Entity("c_sharp.Models.Lesson", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("lessonName")
                        .HasColumnType("longtext");

                    b.Property<int?>("teacherId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("teacherId");

                    b.ToTable("lessons");
                });

            modelBuilder.Entity("c_sharp.Models.LessonPdf", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("lessonId")
                        .HasColumnType("int");

                    b.Property<string>("pdfName")
                        .HasColumnType("longtext");

                    b.Property<int?>("teacherId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("lessonId");

                    b.HasIndex("teacherId");

                    b.ToTable("lessonPdfs");
                });

            modelBuilder.Entity("c_sharp.Models.Teacher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("teacherEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("teacherGithub")
                        .HasColumnType("longtext");

                    b.Property<string>("teacherLastname")
                        .HasColumnType("longtext");

                    b.Property<string>("teacherName")
                        .HasColumnType("longtext");

                    b.Property<string>("teacherPassword")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("teachers");
                });

            modelBuilder.Entity("c_sharp.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("lastname")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("c_sharp.Models.Lesson", b =>
                {
                    b.HasOne("c_sharp.Models.Teacher", "teacher")
                        .WithMany("lessons")
                        .HasForeignKey("teacherId");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("c_sharp.Models.LessonPdf", b =>
                {
                    b.HasOne("c_sharp.Models.Lesson", "lesson")
                        .WithMany("lessonPdf")
                        .HasForeignKey("lessonId");

                    b.HasOne("c_sharp.Models.Teacher", "teacher")
                        .WithMany("lessonPdfs")
                        .HasForeignKey("teacherId");

                    b.Navigation("lesson");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("c_sharp.Models.Lesson", b =>
                {
                    b.Navigation("lessonPdf");
                });

            modelBuilder.Entity("c_sharp.Models.Teacher", b =>
                {
                    b.Navigation("lessonPdfs");

                    b.Navigation("lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
